# Simplified nginx configuration without auth_request for testing
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Simple log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Rate limiting zones (optional)
    limit_req_zone $binary_remote_addr zone=ip_rate_limit:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=ip_conn_limit:10m;

    # Connection settings
    keepalive_timeout  65;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Backend servers
    upstream backend {
        least_conn;
        server backend1:80 weight=3 max_fails=3 fail_timeout=30s;
        server backend2:80 weight=2 max_fails=3 fail_timeout=30s;
        server backend3:80 weight=1 max_fails=3 fail_timeout=30s;
    }

    # Health check endpoint
    server {
        listen 81;
        location /health {
            access_log off;
            return 200 "OK";
        }
    }

    # Main server (simplified without DDoS detection)
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint proxy
        location /health {
            proxy_pass http://fastapi:8000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # DDoS detection API endpoint (direct access for testing)
        location /detect {
            proxy_pass http://fastapi:8000/detect;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Main location without auth_request
        location / {
            # Optional rate limiting
            limit_req zone=ip_rate_limit burst=10 nodelay;
            limit_conn ip_conn_limit 5;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Backend-Server $upstream_addr;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
